[project]
name = "copper"
version = "0.1.0"
description = "Copper: The Universal Semantic Layer - Define Once. Run Anywhere."
authors = [
    {name = "Copper Team"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "antlr4-python3-runtime>=4.9.0",
    "pyyaml>=6.0",
    "pandas>=1.3.0",
    "pydantic>=1.8.0",
    "streamlit>=1.40.1",
    "plotly>=6.2.0",
    "duckdb>=1.3.0",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.1",
    "beautifulsoup4>=4.9.0",
    "lxml>=4.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "mypy>=0.910",
]
ui = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "numpy>=1.21.0",
]
sql = ["sqlalchemy>=1.4.0"]
beam = ["apache-beam>=2.0.0"]

[project.scripts]
copper = "cli:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | copper/parser/generated
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "copper/parser/generated/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/generated/*",
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
]
ui = [
    "numpy>=1.24.4",
    "plotly>=6.2.0",
    "streamlit>=1.40.1",
]
